# -*- coding: utf-8 -*-
"""Hotel_Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VcuJeQr8Duqcn-MldikvKkDhi0FzJOpG
"""

import numpy as np
import pandas as pd

df=pd.read_csv('/content/hotel_bookings.csv')

df.head()

df.shape

a=df.isnull().sum()

"""we will be deciding to drop agent and company column from the dataset"""

a/len(df)*100

df.isnull().sum()

"""After realising the percentage of missing values we decide to delete country and company columns where the Percentage of Missing values is either less than 5 percent or more than 70 percent"""

df.drop(["company"],axis=1,inplace=True)

df.head()

df.drop(["country"],axis=1,inplace=True)
df.head()

m=df.corr()
m

import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd

# Plot heatmap
plt.figure(figsize=(17, 6))
sns.heatmap(m, annot=True, cmap='coolwarm', fmt=".2f")
plt.title('Correlation Heatmap')
plt.show()

"""Correlation close to -1: This means that as one column's values increase, the other column's values tend to decrease proportionally

Correlation close to 0: This means that changes in one column have little to no effect on the changes in the other column

Correlation close to 1: This means that as one column's values increase, the other column's values tend to increase proportionally.
"""

plt.figure(figsize=(10, 6))
sns.countplot(data=df, x='hotel')
plt.title('Distribution of Hotel Types')
plt.xlabel('hotel')
plt.ylabel('is_canceled')
plt.show()

"""We Observe that the City Hotel have an higher Frequency of Cancellations than the Resort Hotels"""

plt.figure(figsize=(10, 6))
sns.countplot(data=df, x='arrival_date_month', order=['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'])
plt.title('Monthly Booking Distribution')
plt.xlabel('Month')
plt.ylabel('Count')
plt.xticks(rotation=45)
plt.show()

plt.figure(figsize=(12, 8))

# Plotting the count of bookings per month
sns.countplot(data=df, x='arrival_date_month', order=['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'], hue='hotel')

plt.title('Monthly Booking Distribution by Hotel Type')
plt.xlabel('Month')
plt.ylabel('Count')
plt.xticks(rotation=45)
plt.legend(title='Hotel Type')

plt.show()

df['arrival_date_month'] = pd.Categorical(df['arrival_date_month'],
                                                  categories=['January', 'February', 'March', 'April', 'May', 'June',
                                                              'July', 'August', 'September', 'October', 'November', 'December'],
                                                  ordered=True)

monthly_booking_status = df.groupby(['arrival_date_month', 'is_canceled']).size().unstack()

plt.figure(figsize=(12, 8))
monthly_booking_status.plot(kind='bar', stacked=True)
plt.title('Booking Status by Month')
plt.xlabel('Month')
plt.ylabel('Count')
plt.xticks(rotation=45)
plt.legend(title='Booking Status', labels=['Not Canceled', 'Canceled'])
plt.show()

"""Here we observe that the number of canceled Bookings are exceptionaly higher than the Non Canceled Bookings"""

df['arrival_date_month'] = pd.Categorical(df['arrival_date_month'],
                                                  categories=['January', 'February', 'March', 'April', 'May', 'June',
                                                              'July', 'August', 'September', 'October', 'November', 'December'],
                                                  ordered=True)

monthly_booking_status = df.groupby(['arrival_date_month', 'is_canceled']).size().unstack()

plt.figure(figsize=(12, 8))
monthly_booking_status.plot(kind='bar', stacked=False)
plt.title('Booking Status by Month')
plt.xlabel('Month')
plt.ylabel('Count')
plt.xticks(rotation=45)
plt.legend(title='Booking Status', labels=['Not Canceled', 'Canceled'])
plt.show()

plt.figure(figsize=(10, 6))
sns.boxplot(data=df, x='is_canceled', y='lead_time')
plt.title('Lead Time Distribution for Canceled and Not Canceled Bookings')
plt.xlabel('Booking Status')
plt.ylabel('Lead Time')
plt.show()

